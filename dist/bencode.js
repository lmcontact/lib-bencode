var Bencode=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(1);t.encode=r.encode;const o=n(2);t.decode=o.decode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class r extends Error{constructor(e){super(e)}}function o(e){const t=typeof e;return"object"===t?null===e?"null":e instanceof Array?"list":"dict":t}function c(e){return`${e.length}:${e}`}function i(e){return`i${e.toString()}e`}function d(e){const t=[];return e.forEach(e=>{const n=o(e);if("list"===n)t.push(d(e));else if("dict"===n)t.push(s(e));else if("bigint"===n)t.push(i(e));else{if("string"!==n)throw new r(`encodeList: wrong type ${n}`);t.push(c(e))}}),`l${t.join("")}e`}function s(e){const t=[],n=Object.keys(e);n.sort();for(let u of n){const n=o(e[u]);if(t.push(`${u.length}:${u}`),"dict"===n)t.push(s(e[u]));else if("list"===n)t.push(d(e[u]));else if("string"===n)t.push(c(e[u]));else{if("bigint"!==n)throw new r(`encodeDict: wrong type ${n}`);t.push(i(e[u]))}}return`d${t.join("")}e`}t.EncodeError=r,t.getType=o,t.encodeString=c,t.encodeInt=i,t.encodeList=d,t.encodeDict=s,t.encode=function(e){const t=o(e);if("dict"===t)return s(e);if("list"===t)return d(e);if("bigint"===t)return i(e);if("string"===t)return c(e);throw new r(`encodeDict: wrong type ${t}`)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class r extends Error{constructor(e){super(e)}}function o(e,t){e++;const n=t.indexOf("e",e);let o;if("0"===t[e]&&"e"!==t[e+1])throw new r("decodeInt: leading zero");if("-"===t[e]&&!"123456789".includes(t[e+1]))throw new r("decodeInt: invalid value");try{o=BigInt(t.slice(e,n))}catch(e){throw new r("decodeInt: invalid value")}return[n+1,o]}function c(e,t){let n=t.indexOf(":",e);if(-1===n)throw new r("decodeString: no colon found");const o=parseInt(t.slice(e,n));if(t.slice(n+1).length<o)throw new r("decodeString: data too short");return[++n+o,t.slice(n,n+o)]}function i(e,t){e++;const n=[];for(;e<t.length&&"e"!==t[e];){let s,u;if("i"===t[e])try{[s,u]=o(e,t)}catch(e){throw new r("decodeList: error while int")}else if("0123456789".includes(t[e]))try{[s,u]=c(e,t)}catch(e){throw new r("decodeList: error while decoding string")}else if("l"===t[e])try{[s,u]=i(e,t)}catch(e){throw new r("decodeList: error decoding list")}else{if("d"!==t[e])throw new r("decodeList: invalid value");try{[s,u]=d(e,t)}catch(e){throw new r("decodeList: error decoding dict")}}n.push(u),e=s}if("e"!==t[e])throw new r("decodeList: unexpected end");return[e+1,n]}function d(e,t){e++;const n={};for(;e<t.length&&"e"!==t[e];){let s,u,l;try{[s,l]=c(e,t)}catch(e){throw new r("decodeDict: error decoding key")}if("i"===t[e=s])try{[s,u]=o(e,t)}catch(e){throw new r("decodeDict: error decoding int")}else if("0123456789".includes(t[e]))try{[s,u]=c(e,t)}catch(e){throw new r("decodeDict: error decoding string")}else if("l"===t[e])try{[s,u]=i(e,t)}catch(e){throw new r("decodeDict: decoding list")}else{if("d"!==t[e])throw new r("decodeDict: invalid value");try{[s,u]=d(e,t)}catch(e){throw new r("decodeDict: error decoding dict")}}n[l]=u,e=s}if("e"!==t[e])throw new r("decodeDict: unexpected end");return[e+1,n]}t.DecodeError=r,t.decodeInt=o,t.decodeString=c,t.decodeList=i,t.decodeDict=d,t.decode=function(e){const t=[];let n=0;for(;n<e.length;){let s,u;if("i"===e[n])try{[s,u]=o(n,e)}catch(e){throw new r("decode: error decoding int")}else if("0123456789".includes(e[n]))try{[s,u]=c(n,e)}catch(e){throw new r("decode: error decoding string")}else if("l"===e[n])try{[s,u]=i(n,e)}catch(e){throw new r("decode: error decoding list")}else{if("d"!==e[n])throw new r("decode: invalid value");try{[s,u]=d(n,e)}catch(e){throw new r("decode: error decoding dict")}}t.push(u),n=s}return t.length>1?t:t.length?t[0]:null}}]);