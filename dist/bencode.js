var bencode=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r="i".charCodeAt(0);t.INT_DELIMITER=r;const o="l".charCodeAt(0);t.LIST_DELIMITER=o;const c="d".charCodeAt(0);t.DICT_DELIMITER=c;const i="e".charCodeAt(0);t.END_DELIMITER=i;const d="0.".charCodeAt(0);t.ZERO=d;const s="-".charCodeAt(0);t.MINUS=s;const l=":".charCodeAt(0);t.COLON=l;const u=["0","1","2","3","4","5","6","7","8","9"].map(e=>e.charCodeAt(0));t.STR_DELIMITERS=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(2);t.encode=r.encode;const o=n(3);t.decode=o.decode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(0);class o extends Error{constructor(e){super(e)}}function c(e){const t=typeof e;return e&&e.buffer?"rawstring":"object"===t?null===e?"null":e instanceof Array?"list":"dict":t}function i(e){const t=(new TextEncoder).encode(String(e.length)),n=new Uint8Array(new ArrayBuffer(t.length+1+e.length));return n.set(t,0),n.set([r.COLON],t.length),n.set(e,t.length+1),n}function d(e){return(new TextEncoder).encode(`i${e.toString()}e`)}function s(e){const t=[],n=new TextEncoder;e.forEach(e=>{const r=c(e);if("list"===r)t.push(s(e));else if("dict"===r)t.push(l(e));else if("bigint"===r)t.push(d(e));else if("rawstring"===r)t.push(i(e));else{if("string"!==r)throw new o(`encodeList: wrong type ${r}`);t.push(i(n.encode(e)))}});const u=t.length?t.map(e=>e.length).reduce((e,t)=>e+t):0,f=new Uint8Array(new ArrayBuffer(u+2));let h=0;f.set([r.LIST_DELIMITER],h),h++;for(let e of t)f.set(e,h),h+=e.length;return f.set([r.END_DELIMITER],h),f}function l(e){const t=[],n=new TextEncoder,u=Object.keys(e);u.sort();for(let r of u){const u=c(e[r]);if(t.push(n.encode(`${r.length}:${r}`)),"dict"===u)t.push(l(e[r]));else if("list"===u)t.push(s(e[r]));else if("rawstring"===u)t.push(i(e[r]));else if("string"===u)t.push(i(n.encode(e[r])));else{if("bigint"!==u)throw new o(`encodeDict: wrong type ${u}`);t.push(d(e[r]))}}const f=t.length?t.map(e=>e.length).reduce((e,t)=>e+t):0,h=new Uint8Array(new ArrayBuffer(f+2));let a=0;h.set([r.DICT_DELIMITER],a),a++;for(let e of t)h.set(e,a),a+=e.length;return h.set([r.END_DELIMITER],a),h}t.EncodeError=o,t.getType=c,t.encodeString=i,t.encodeInt=d,t.encodeList=s,t.encodeDict=l,t.encode=function(e){const t=c(e);if("dict"===t)return l(e);if("list"===t)return s(e);if("bigint"===t)return d(e);if("rawstring"===t)return i(e);if("string"===t)return i((new TextEncoder).encode(e));throw new o(`encodeDict: wrong type ${t}`)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(0);class o extends Error{constructor(e){super(e)}}function c(e,t){e++;const n=t.indexOf(r.END_DELIMITER,e);let c;if(t[e]===r.ZERO&&t[e+1]!==r.END_DELIMITER)throw new o("decodeInt: leading zero");if(t[e]===r.MINUS&&(t[e+1]==="0".charCodeAt(0)||!r.STR_DELIMITERS.includes(t[e+1])))throw new o("decodeInt: invalid value");try{const r=(new TextDecoder).decode(t.slice(e,n));c=BigInt(r)}catch(e){throw new o("decodeInt: invalid value")}return[n+1,c]}function i(e,t){let n=t.indexOf(r.COLON,e);if(-1===n)throw new o("decodeString: no colon found");const c=(new TextDecoder).decode(t.slice(e,n)),i=parseInt(c);if(n++,t.slice(n,n+i).length<i)throw new o("decodeString: data too short");return[n+i,t.slice(n,n+i)]}function d(e,t){e++;const n=[];for(;e<t.length&&t[e]!==r.END_DELIMITER;){let l,u;if(t[e]===r.INT_DELIMITER)try{[l,u]=c(e,t)}catch(e){throw new o("decodeList: error while int")}else if(r.STR_DELIMITERS.includes(t[e]))try{[l,u]=i(e,t)}catch(e){throw new o("decodeList: error while decoding string")}else if(t[e]===r.LIST_DELIMITER)try{[l,u]=d(e,t)}catch(e){throw new o("decodeList: error decoding list")}else{if(t[e]!==r.DICT_DELIMITER)throw new o("decodeList: invalid value");try{[l,u]=s(e,t)}catch(e){throw new o("decodeList: error decoding dict")}}n.push(u),e=l}if(t[e]!==r.END_DELIMITER)throw new o("decodeList: unexpected end");return[e+1,n]}function s(e,t){e++;const n={};for(;e<t.length&&t[e]!==r.END_DELIMITER;){let l,u,f,h;try{[l,f]=i(e,t),h=(new TextDecoder).decode(f)}catch(e){throw new o("decodeDict: error decoding key")}if(t[e=l]===r.INT_DELIMITER)try{[l,u]=c(e,t)}catch(e){throw new o("decodeDict: error decoding int")}else if(r.STR_DELIMITERS.includes(t[e]))try{[l,u]=i(e,t)}catch(e){throw new o("decodeDict: error decoding string")}else if(t[e]===r.LIST_DELIMITER)try{[l,u]=d(e,t)}catch(e){throw new o("decodeDict: decoding list")}else{if(t[e]!==r.DICT_DELIMITER)throw new o("decodeDict: invalid value");try{[l,u]=s(e,t)}catch(e){throw new o("decodeDict: error decoding dict")}}n[h]=u,e=l}if(t[e]!==r.END_DELIMITER)throw new o("decodeDict: unexpected end");return[e+1,n]}t.DecodeError=o,t.decodeInt=c,t.decodeString=i,t.decodeList=d,t.decodeDict=s,t.decode=function(e){const t=[];let n=0;for(;n<e.length;){let l,u;if(e[n]===r.INT_DELIMITER)try{[l,u]=c(n,e)}catch(e){throw new o("decode: error decoding int")}else if(r.STR_DELIMITERS.includes(e[n]))try{[l,u]=i(n,e)}catch(e){throw new o("decode: error decoding string")}else if(e[n]===r.LIST_DELIMITER)try{[l,u]=d(n,e)}catch(e){throw new o("decode: error decoding list")}else{if(e[n]!==r.DICT_DELIMITER)throw new o("decode: invalid value");try{[l,u]=s(n,e)}catch(e){throw new o("decode: error decoding dict")}}t.push(u),n=l}return t.length>1?t:t.length?t[0]:null}}]);