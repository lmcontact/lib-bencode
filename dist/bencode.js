var bencode=function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(1);t.encode=o.encode;const r=n(2);t.decode=r.decode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class o extends Error{constructor(e){super(e)}}function r(e){const t=typeof e;return"object"===t?null===e?"null":e instanceof Array?"list":"dict":t}function c(e){return`${e.length}:${e}`}function d(e){return`i${e.toString()}e`}function i(e){const t=[];return e.forEach(e=>{const n=r(e);if("list"===n)t.push(i(e));else if("dict"===n)t.push(s(e));else if("bigint"===n)t.push(d(e));else{if("string"!==n)throw new o(`encodeList: wrong type ${n}`);t.push(c(e))}}),`l${t.join("")}e`}function s(e){const t=[],n=Object.keys(e);n.sort();for(let u of n){const n=r(e[u]);if(t.push(`${u.length}:${u}`),"dict"===n)t.push(s(e[u]));else if("list"===n)t.push(i(e[u]));else if("string"===n)t.push(c(e[u]));else{if("bigint"!==n)throw new o(`encodeDict: wrong type ${n}`);t.push(d(e[u]))}}return`d${t.join("")}e`}t.EncodeError=o,t.getType=r,t.encodeString=c,t.encodeInt=d,t.encodeList=i,t.encodeDict=s,t.encode=function(e){const t=r(e),n=new TextEncoder;if("dict"===t)return n.encode(s(e));if("list"===t)return n.encode(i(e));if("bigint"===t)return n.encode(d(e));if("string"===t)return n.encode(c(e));throw new o(`encodeDict: wrong type ${t}`)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(3);class r extends Error{constructor(e){super(e)}}function c(e,t){e++;const n=t.indexOf(o.END_DELIMITER,e);let c;if(t[e]===o.ZERO&&t[e+1]!==o.END_DELIMITER)throw new r("decodeInt: leading zero");if(t[e]===o.MINUS&&(t[e+1]==="0".charCodeAt(0)||!o.STR_DELIMITERS.includes(t[e+1])))throw new r("decodeInt: invalid value");try{const o=(new TextDecoder).decode(t.slice(e,n));c=BigInt(o)}catch(e){throw new r("decodeInt: invalid value")}return[n+1,c]}function d(e,t){let n=t.indexOf(o.COLON,e);if(-1===n)throw new r("decodeString: no colon found");const c=(new TextDecoder).decode(t.slice(e,n)),d=parseInt(c);if(n++,t.slice(n,n+d).length<d)throw new r("decodeString: data too short");return[n+d,t.slice(n,n+d)]}function i(e,t){e++;const n=[];for(;e<t.length&&t[e]!==o.END_DELIMITER;){let u,l;if(t[e]===o.INT_DELIMITER)try{[u,l]=c(e,t)}catch(e){throw new r("decodeList: error while int")}else if(o.STR_DELIMITERS.includes(t[e]))try{[u,l]=d(e,t)}catch(e){throw new r("decodeList: error while decoding string")}else if(t[e]===o.LIST_DELIMITER)try{[u,l]=i(e,t)}catch(e){throw new r("decodeList: error decoding list")}else{if(t[e]!==o.DICT_DELIMITER)throw new r("decodeList: invalid value");try{[u,l]=s(e,t)}catch(e){throw new r("decodeList: error decoding dict")}}n.push(l),e=u}if(t[e]!==o.END_DELIMITER)throw new r("decodeList: unexpected end");return[e+1,n]}function s(e,t){e++;const n={};for(;e<t.length&&t[e]!==o.END_DELIMITER;){let u,l,f,h;try{[u,f]=d(e,t),h=(new TextDecoder).decode(f)}catch(e){throw new r("decodeDict: error decoding key")}if(t[e=u]===o.INT_DELIMITER)try{[u,l]=c(e,t)}catch(e){throw new r("decodeDict: error decoding int")}else if(o.STR_DELIMITERS.includes(t[e]))try{[u,l]=d(e,t)}catch(e){throw new r("decodeDict: error decoding string")}else if(t[e]===o.LIST_DELIMITER)try{[u,l]=i(e,t)}catch(e){throw new r("decodeDict: decoding list")}else{if(t[e]!==o.DICT_DELIMITER)throw new r("decodeDict: invalid value");try{[u,l]=s(e,t)}catch(e){throw new r("decodeDict: error decoding dict")}}n[h]=l,e=u}if(t[e]!==o.END_DELIMITER)throw new r("decodeDict: unexpected end");return[e+1,n]}t.DecodeError=r,t.decodeInt=c,t.decodeString=d,t.decodeList=i,t.decodeDict=s,t.decode=function(e){const t=[];let n=0;for(;n<e.length;){let u,l;if(e[n]===o.INT_DELIMITER)try{[u,l]=c(n,e)}catch(e){throw new r("decode: error decoding int")}else if(o.STR_DELIMITERS.includes(e[n]))try{[u,l]=d(n,e)}catch(e){throw new r("decode: error decoding string")}else if(e[n]===o.LIST_DELIMITER)try{[u,l]=i(n,e)}catch(e){throw new r("decode: error decoding list")}else{if(e[n]!==o.DICT_DELIMITER)throw new r("decode: invalid value");try{[u,l]=s(n,e)}catch(e){throw new r("decode: error decoding dict")}}t.push(l),n=u}return t.length>1?t:t.length?t[0]:null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o="i".charCodeAt(0);t.INT_DELIMITER=o;const r="l".charCodeAt(0);t.LIST_DELIMITER=r;const c="d".charCodeAt(0);t.DICT_DELIMITER=c;const d="e".charCodeAt(0);t.END_DELIMITER=d;const i="0.".charCodeAt(0);t.ZERO=i;const s="-".charCodeAt(0);t.MINUS=s;const u=":".charCodeAt(0);t.COLON=u;const l=["0","1","2","3","4","5","6","7","8","9"].map(e=>e.charCodeAt(0));t.STR_DELIMITERS=l}]);